// Colors
$red50: #ffebee
$red: #f44336
$red500: $red
$red700: #d32f2f
$purple: #9C27B0
$purple500: $purple
$purple700: #7B1FA2
$deepPurple: #673AB7
$deepPurple500: $deepPurple
$blue: #2196F3
$blue500: $blue
$blue700: #1976D2
$cyan: #00BCD4
$cyan500: $cyan
$cyan700: #0097A7
$green: #4CAF50
$green500: $green
$green700: #388E3C
$orange200: #FFCC80
$orange300: #FFB74D
$orange: #FF9800
$orange500: $orange
$orange700: #F57C00
$grey100: #F5F5F5
$grey200: #EEEEEE
$grey300: #E0E0E0
$grey400: #BDBDBD
$grey: #9E9E9E
$grey500: $grey
$grey900: #212121
$blueGrey200: #B0BEC5
$blueGrey: #607D8B
$blueGrey500: $blueGrey

$accentColor: $orange
$borderColor: $grey300

// Paths
$root: "../"
$background: $root + "background.png"
$pokemonHeader: $root + "/header.png"

// Fonts
$mainFonts: "Roboto", "Helvetica", "Arial", sans-serif

// Mixins
=heightWidthSize($size: 100%)
  height: $size
  width: $size

=css3($property, $value)
  @each $prefix in -webkit-, -moz-, -ms-, -o-, ''''
    #{$prefix}#{$property}: $value

=border-radius($radius)  // Always a handy mixin. Set border radius without worrying about all those prefixes.
  +css3(border-radius, $radius)
  background-clip: padding-box  // stops bg color from leaking outside the border

=box-sizing($box-model) // Reset your elements box model with ease.
  +css3(box-sizing, $box-model)

=transform($transforms)
  +css3(transform, $transforms)

=transition($args...)
  +css3(transition, $args)

=opacity($opacity) // Set the opacity for all browsers and provide a filter fallback for IE8.
  opacity: $opacity
  $opacity-ie: $opacity * 100
  filter: alpha(opacity=$opacity-ie) //IE8

=center-block // Quickly center any element within its parent. Requires width or max-width to be set.
  display: block
  margin:
    left: auto
    right: auto

=text-truncate // An easy way to truncate text with an ellipsis. Requires the element to be block or inline-block.
  overflow: hidden
  text-overflow: ellipsis
  white-space: nowrap

=abs-pos ($top: auto, $right: auto, $bottom: auto, $left: auto) // Pass in the desired location of your target element to produce all the necessary positioning code.
  top: $top
  right: $right
  bottom: $bottom
  left: $left
  position: absolute

=font-size($size: 14, $base: 14 ) //  This mixin sets the font size in rem''s with a px fallback.
  font-size: $size + px //fallback for old browsers
  font-size: ($size / $base) * 1rem

=line-height($height: 12, $base: 12 ) // This mixin sets the line height in rem''s with a px fallback.
  line-height: $height + px //fallback for old browsers
  line-height: ($height / $base) * 1rem

=centered
  position: absolute
  top: 50%
  left: 50%
  transform: translate(-50%, -50%)
